<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="2" total="12" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="autoFucntionTestV2.0_beta Suite" duration-ms="103605" started-at="2017-02-01T20:19:39Z" finished-at="2017-02-01T20:21:23Z">
    <groups>
      <group name="P1">
        <method signature="BaiduLoginPageCase.testUsernamePasswdError()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@15b9e0]" name="testUsernamePasswdError" class="com.lkpower.testcase.BaiduLoginPageCase"/>
      </group> <!-- P1 -->
      <group name="P0">
        <method signature="BaiduLoginPageCase.testOnlyPassword()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@18e58ce]" name="testOnlyPassword" class="com.lkpower.testcase.BaiduLoginPageCase"/>
        <method signature="BaiduLoginPageCase.testOnlyUsername()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@18e58ce]" name="testOnlyUsername" class="com.lkpower.testcase.BaiduLoginPageCase"/>
        <method signature="BaiduMainPageCase.testcase001()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@ca2df1]" name="testcase001" class="com.lkpower.testcase.BaiduMainPageCase"/>
        <method signature="BaiduMainPageCase.testcase002()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@ca2df1]" name="testcase002" class="com.lkpower.testcase.BaiduMainPageCase"/>
        <method signature="BaiduLoginPageCase.testOnlyPassword()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@15b9e0]" name="testOnlyPassword" class="com.lkpower.testcase.BaiduLoginPageCase"/>
        <method signature="BaiduLoginPageCase.testOnlyUsername()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@15b9e0]" name="testOnlyUsername" class="com.lkpower.testcase.BaiduLoginPageCase"/>
        <method signature="BaiduMainPageCase.testcase001()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@d6ad74]" name="testcase001" class="com.lkpower.testcase.BaiduMainPageCase"/>
        <method signature="BaiduMainPageCase.testcase002()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@d6ad74]" name="testcase002" class="com.lkpower.testcase.BaiduMainPageCase"/>
      </group> <!-- P0 -->
    </groups>
    <test name="autoFucntionTestV2.0_beta-smokeTest" duration-ms="51609" started-at="2017-02-01T20:19:39Z" finished-at="2017-02-01T20:20:31Z">
      <class name="com.lkpower.testcase.BaiduLoginPageCase">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@18e58ce]" name="beforeMethod" is-config="true" duration-ms="2164" started-at="2017-02-02T04:20:14Z" finished-at="2017-02-02T04:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod2()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@18e58ce]" name="beforeMethod2" is-config="true" duration-ms="3434" started-at="2017-02-02T04:20:16Z" finished-at="2017-02-02T04:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod2 -->
        <test-method status="PASS" signature="testOnlyPassword()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@18e58ce]" name="testOnlyPassword" duration-ms="285" started-at="2017-02-02T04:20:19Z" description="case3-仅输入密码，不输入用户名登录" finished-at="2017-02-02T04:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnlyPassword -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@18e58ce]" name="afterMethod" is-config="true" duration-ms="2736" started-at="2017-02-02T04:20:20Z" finished-at="2017-02-02T04:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@18e58ce]" name="beforeMethod" is-config="true" duration-ms="2141" started-at="2017-02-02T04:20:23Z" finished-at="2017-02-02T04:20:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod2()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@18e58ce]" name="beforeMethod2" is-config="true" duration-ms="3452" started-at="2017-02-02T04:20:25Z" finished-at="2017-02-02T04:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod2 -->
        <test-method status="PASS" signature="testOnlyUsername()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@18e58ce]" name="testOnlyUsername" duration-ms="278" started-at="2017-02-02T04:20:28Z" description="case2-仅输入用户名，不输入密码登录" finished-at="2017-02-02T04:20:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnlyUsername -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@18e58ce]" name="afterMethod" is-config="true" duration-ms="2719" started-at="2017-02-02T04:20:28Z" finished-at="2017-02-02T04:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.lkpower.testcase.BaiduLoginPageCase -->
      <class name="com.lkpower.testcase.BaiduMainPageCase">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@ca2df1]" name="beforeMethod" is-config="true" duration-ms="2592" started-at="2017-02-02T04:19:40Z" finished-at="2017-02-02T04:19:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod2()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@ca2df1]" name="beforeMethod2" is-config="true" duration-ms="2295" started-at="2017-02-02T04:19:42Z" finished-at="2017-02-02T04:19:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod2 -->
        <test-method status="SKIP" signature="testcase001()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@ca2df1]" name="testcase001" duration-ms="2328" started-at="2017-02-02T04:19:44Z" description="case1-输入正确的关键字进行测试 " finished-at="2017-02-02T04:19:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.lkpower.testcase.BaiduMainPageCase.testcase001(BaiduMainPageCase.java:40)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.TestNG.privateMain(TestNG.java:1355)
	at org.testng.TestNG.main(TestNG.java:1324)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase001 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@ca2df1]" name="afterMethod" is-config="true" duration-ms="2835" started-at="2017-02-02T04:19:47Z" finished-at="2017-02-02T04:19:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@ca2df1]" name="beforeMethod" is-config="true" duration-ms="2165" started-at="2017-02-02T04:19:50Z" finished-at="2017-02-02T04:19:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod2()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@ca2df1]" name="beforeMethod2" is-config="true" duration-ms="1305" started-at="2017-02-02T04:19:52Z" finished-at="2017-02-02T04:19:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod2 -->
        <test-method status="SKIP" signature="testcase001()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@ca2df1]" name="testcase001" duration-ms="2398" started-at="2017-02-02T04:19:53Z" description="case1-输入正确的关键字进行测试 " finished-at="2017-02-02T04:19:55Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.lkpower.testcase.BaiduMainPageCase.testcase001(BaiduMainPageCase.java:40)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:963)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.TestNG.privateMain(TestNG.java:1355)
	at org.testng.TestNG.main(TestNG.java:1324)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase001 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@ca2df1]" name="afterMethod" is-config="true" duration-ms="2717" started-at="2017-02-02T04:19:55Z" finished-at="2017-02-02T04:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@ca2df1]" name="beforeMethod" is-config="true" duration-ms="2182" started-at="2017-02-02T04:19:58Z" finished-at="2017-02-02T04:20:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod2()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@ca2df1]" name="beforeMethod2" is-config="true" duration-ms="1019" started-at="2017-02-02T04:20:00Z" finished-at="2017-02-02T04:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod2 -->
        <test-method status="FAIL" signature="testcase001()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@ca2df1]" name="testcase001" duration-ms="2309" started-at="2017-02-02T04:20:01Z" description="case1-输入正确的关键字进行测试 " finished-at="2017-02-02T04:20:04Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.lkpower.testcase.BaiduMainPageCase.testcase001(BaiduMainPageCase.java:40)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:963)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.TestNG.privateMain(TestNG.java:1355)
	at org.testng.TestNG.main(TestNG.java:1324)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase001 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@ca2df1]" name="afterMethod" is-config="true" duration-ms="2678" started-at="2017-02-02T04:20:05Z" finished-at="2017-02-02T04:20:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@ca2df1]" name="beforeMethod" is-config="true" duration-ms="2117" started-at="2017-02-02T04:20:08Z" finished-at="2017-02-02T04:20:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod2()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@ca2df1]" name="beforeMethod2" is-config="true" duration-ms="1049" started-at="2017-02-02T04:20:10Z" finished-at="2017-02-02T04:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod2 -->
        <test-method status="PASS" signature="testcase002()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@ca2df1]" name="testcase002" duration-ms="394" started-at="2017-02-02T04:20:11Z" description="case2-不输入关键字进行测试 " finished-at="2017-02-02T04:20:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase002 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@ca2df1]" name="afterMethod" is-config="true" duration-ms="2698" started-at="2017-02-02T04:20:11Z" finished-at="2017-02-02T04:20:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.lkpower.testcase.BaiduMainPageCase -->
    </test> <!-- autoFucntionTestV2.0_beta-smokeTest -->
    <test name="autoFunctionTest_v1.2_fullTest" duration-ms="51985" started-at="2017-02-01T20:20:31Z" finished-at="2017-02-01T20:21:23Z">
      <class name="com.lkpower.testcase.BaiduLoginPageCase">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@15b9e0]" name="beforeMethod" is-config="true" duration-ms="2133" started-at="2017-02-02T04:20:48Z" finished-at="2017-02-02T04:20:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod2()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@15b9e0]" name="beforeMethod2" is-config="true" duration-ms="3427" started-at="2017-02-02T04:20:50Z" finished-at="2017-02-02T04:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod2 -->
        <test-method status="PASS" signature="testOnlyPassword()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@15b9e0]" name="testOnlyPassword" duration-ms="301" started-at="2017-02-02T04:20:53Z" description="case3-仅输入密码，不输入用户名登录" finished-at="2017-02-02T04:20:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnlyPassword -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@15b9e0]" name="afterMethod" is-config="true" duration-ms="2708" started-at="2017-02-02T04:20:53Z" finished-at="2017-02-02T04:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@15b9e0]" name="beforeMethod" is-config="true" duration-ms="2152" started-at="2017-02-02T04:20:56Z" finished-at="2017-02-02T04:20:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod2()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@15b9e0]" name="beforeMethod2" is-config="true" duration-ms="3164" started-at="2017-02-02T04:20:58Z" finished-at="2017-02-02T04:21:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod2 -->
        <test-method status="PASS" signature="testOnlyUsername()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@15b9e0]" name="testOnlyUsername" duration-ms="293" started-at="2017-02-02T04:21:01Z" description="case2-仅输入用户名，不输入密码登录" finished-at="2017-02-02T04:21:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOnlyUsername -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@15b9e0]" name="afterMethod" is-config="true" duration-ms="2794" started-at="2017-02-02T04:21:02Z" finished-at="2017-02-02T04:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@15b9e0]" name="beforeMethod" is-config="true" duration-ms="2158" started-at="2017-02-02T04:21:05Z" finished-at="2017-02-02T04:21:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod2()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@15b9e0]" name="beforeMethod2" is-config="true" duration-ms="3193" started-at="2017-02-02T04:21:07Z" finished-at="2017-02-02T04:21:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod2 -->
        <test-method status="PASS" signature="testUsernamePasswdError()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@15b9e0]" name="testUsernamePasswdError" duration-ms="1898" started-at="2017-02-02T04:21:10Z" description="case1-输入错误的用户名和密码登录" finished-at="2017-02-02T04:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUsernamePasswdError -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@15b9e0]" name="afterMethod" is-config="true" duration-ms="2725" started-at="2017-02-02T04:21:12Z" finished-at="2017-02-02T04:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@15b9e0]" name="beforeMethod" is-config="true" duration-ms="2655" started-at="2017-02-02T04:21:15Z" finished-at="2017-02-02T04:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod2()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@15b9e0]" name="beforeMethod2" is-config="true" duration-ms="3085" started-at="2017-02-02T04:21:17Z" finished-at="2017-02-02T04:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod2 -->
        <test-method status="PASS" signature="testWithoutUserNameAndPwd()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@15b9e0]" name="testWithoutUserNameAndPwd" duration-ms="153" started-at="2017-02-02T04:21:20Z" description="case4-用户名密码都不输入点击登录" finished-at="2017-02-02T04:21:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithoutUserNameAndPwd -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.lkpower.testcase.BaiduLoginPageCase@15b9e0]" name="afterMethod" is-config="true" duration-ms="2679" started-at="2017-02-02T04:21:20Z" finished-at="2017-02-02T04:21:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.lkpower.testcase.BaiduLoginPageCase -->
      <class name="com.lkpower.testcase.BaiduMainPageCase">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@d6ad74]" name="beforeMethod" is-config="true" duration-ms="2149" started-at="2017-02-02T04:20:31Z" finished-at="2017-02-02T04:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod2()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@d6ad74]" name="beforeMethod2" is-config="true" duration-ms="1790" started-at="2017-02-02T04:20:33Z" finished-at="2017-02-02T04:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod2 -->
        <test-method status="FAIL" signature="testcase001()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@d6ad74]" name="testcase001" duration-ms="2298" started-at="2017-02-02T04:20:35Z" description="case1-输入正确的关键字进行测试 " finished-at="2017-02-02T04:20:37Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.lkpower.testcase.BaiduMainPageCase.testcase001(BaiduMainPageCase.java:40)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.TestNG.privateMain(TestNG.java:1355)
	at org.testng.TestNG.main(TestNG.java:1324)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase001 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@d6ad74]" name="afterMethod" is-config="true" duration-ms="2672" started-at="2017-02-02T04:20:39Z" finished-at="2017-02-02T04:20:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@d6ad74]" name="beforeMethod" is-config="true" duration-ms="2181" started-at="2017-02-02T04:20:41Z" finished-at="2017-02-02T04:20:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod2()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@d6ad74]" name="beforeMethod2" is-config="true" duration-ms="1132" started-at="2017-02-02T04:20:43Z" finished-at="2017-02-02T04:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod2 -->
        <test-method status="PASS" signature="testcase002()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@d6ad74]" name="testcase002" duration-ms="346" started-at="2017-02-02T04:20:45Z" description="case2-不输入关键字进行测试 " finished-at="2017-02-02T04:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase002 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.lkpower.testcase.BaiduMainPageCase@d6ad74]" name="afterMethod" is-config="true" duration-ms="2655" started-at="2017-02-02T04:20:45Z" finished-at="2017-02-02T04:20:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.lkpower.testcase.BaiduMainPageCase -->
    </test> <!-- autoFunctionTest_v1.2_fullTest -->
  </suite> <!-- autoFucntionTestV2.0_beta Suite -->
</testng-results>
